{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\nimport Loader from '../../components/UI/Loader/Loader';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: {},\n      // {[id]: success error}\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      // { [id]: 'success' 'error' }\n      quiz: [],\n      loading: true\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`);\n      const quiz = response.data;\n      this.setState({\n        quiz,\n        loading: false\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Quiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.state.loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }) : this.state.isFinished ? /*#__PURE__*/React.createElement(FinishedQuiz, {\n      results: this.state.results,\n      quiz: this.state.quiz,\n      onRetry: this.retryHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(ActiveQuiz, {\n      answers: this.state.quiz[this.state.activeQuestion].answers,\n      question: this.state.quiz[this.state.activeQuestion].question,\n      onAnswerClick: this.onAnswerClickHandler,\n      quizLength: this.state.quiz.length,\n      answerNumber: this.state.activeQuestion + 1,\n      state: this.state.answerState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    })));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","axios","Loader","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","loading","onAnswerClickHandler","answerId","key","Object","keys","question","rightAnswerId","id","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","componentDidMount","response","get","props","match","params","data","e","console","log","render","QuizWrapper","answers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\nimport Loader from '../../components/UI/Loader/Loader'\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // {[id]: success error}\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' 'error' }\n    quiz: [],\n    loading: true\n  }\n\n  onAnswerClickHandler = answerId => {\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      this.setState({\n        answerState: {[answerId]: 'success'},\n        results\n      })\n\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null\n          })\n        }\n        window.clearTimeout(timeout)\n      }, 1000)\n    } else {\n      results[question.id] = 'error'\n      this.setState({\n        answerState: {[answerId]: 'error'},\n        results\n      })\n    }\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n      const quiz = response.data\n\n      this.setState({\n        quiz,\n        loading: false\n      })\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.state.loading\n            ? <Loader />\n            : this.state.isFinished\n             ? <FinishedQuiz\n                  results={this.state.results}\n                  quiz={this.state.quiz}\n                  onRetry={this.retryHandler}\n                />\n             : <ActiveQuiz\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                question={this.state.quiz[this.state.activeQuestion].question}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}