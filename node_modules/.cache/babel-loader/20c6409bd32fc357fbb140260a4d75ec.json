{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport classes from './Auth.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nexport default class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Введите корректный email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Пароль',\n          errorMessage: 'Введите корректный пароль',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = () => {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      console.log(`${controlName}: `, event.target.value);\n    };\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, this.renderInputs(), /*#__PURE__*/React.createElement(Button, {\n      type: \"success\",\n      onClick: this.loginHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.registerHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","Auth","state","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","console","log","target","renderInputs","Object","keys","map","index","control","render","AuthForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\n\r\nexport default class Auth extends Component {\r\n\r\n  state = {\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n\r\n  }\r\n\r\n  registerHandler = () => {\r\n\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    console.log(`${controlName}: `, event.target.value)\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            { this.renderInputs() }\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n            >\r\n              Войти\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}