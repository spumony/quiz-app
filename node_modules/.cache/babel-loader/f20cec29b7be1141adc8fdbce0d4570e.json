{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\QuizCreator\\\\QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { createControl } from '../../form/formFramework';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport Select from '../../components/UI/Select/Select';\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Variant ${number}`,\n    errorMessage: 'Value can not be empty',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Enter question',\n      errorMessage: 'Question can not be empty'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      formControls: createFormControls()\n    };\n\n    this.sibmitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {};\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Auxiliary, {\n        key: controlName + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: control.label,\n        value: control.value,\n        valid: control.valid,\n        shouldValidate: !!control.validation,\n        touched: control.touched,\n        errorMessage: control.errorMessage,\n        onChange: event => this.changeHandler(event.target.value, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }), index === 0 ? /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }\n      }) : null);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/React.createElement(Select, {\n      label: \"Choose correct answer\",\n      value: this.state.rightAnswerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Create quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, this.renderControls(), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Add question\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"success\",\n      onClick: this.createQuizHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Create quiz\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","Input","createControl","Auxiliary","Select","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","formControls","sibmitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","changeHandler","value","controlName","renderControls","Object","keys","map","index","control","valid","validation","touched","target","render","select","rightAnswerId","submitHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {createControl} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport Select from '../../components/UI/Select/Select'\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Variant ${number}`,\r\n    errorMessage: 'Value can not be empty',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Enter question',\r\n      errorMessage: 'Question can not be empty'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n\r\n  state = {\r\n    quiz: [],\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  sibmitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = () => {\r\n\r\n  }\r\n\r\n  createQuizHandler = () => {\r\n\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select \r\n      label=\"Choose correct answer\"\r\n      value={this.state.rightAnswerId}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Create quiz</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            { this.renderControls() }\r\n\r\n            <select></select>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n            >\r\n              Add question\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n            >\r\n              Create quiz\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}