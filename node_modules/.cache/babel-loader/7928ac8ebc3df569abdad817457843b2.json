{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport classes from './Auth.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { valid } from 'semver';\nexport default class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Enter valid email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Password',\n          errorMessage: 'Enter valid password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = () => {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      console.log(`${controlName}: `, event.target.value);\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      this.setState({\n        formControls\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n    if (validation.required) return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Authorization\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, this.renderInputs(), /*#__PURE__*/React.createElement(Button, {\n      type: \"success\",\n      onClick: this.loginHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.registerHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Sign up\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","valid","Auth","state","formControls","email","value","type","label","errorMessage","touched","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","console","log","target","control","validateControl","setState","isValid","renderInputs","Object","keys","map","index","render","AuthForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { valid } from 'semver'\r\n\r\nexport default class Auth extends Component {\r\n\r\n  state = {\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Enter valid email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        errorMessage: 'Enter valid password',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n\r\n  }\r\n\r\n  registerHandler = () => {\r\n\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required)\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    console.log(`${controlName}: `, event.target.value)\r\n\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.value = event.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Authorization</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            { this.renderInputs() }\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n            >\r\n              Sign in\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}