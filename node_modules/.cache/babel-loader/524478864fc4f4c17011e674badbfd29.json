{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\QuizCreator\\\\QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Buttom from '../../components/UI/Button/Button';\nimport { createControl } from '../../form/formFramework';\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Variant ${number}`,\n    errorMessage: 'Value can not be empty',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      formControls: {\n        question: createControl({\n          label: 'Enter question',\n          errorMessage: 'Question can not be empty'\n        }, {\n          required: true\n        }),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4)\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Quiz creation\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Buttom, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Add question\"), /*#__PURE__*/React.createElement(Buttom, {\n      type: \"success\",\n      onClick: this.createQuizHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Create quiz\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Buttom","createControl","createOptionControl","number","label","errorMessage","id","required","QuizCreator","state","quiz","formControls","question","option1","option2","option3","option4","submitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,SAAOF,aAAa,CAAC;AACnBG,IAAAA,KAAK,EAAG,WAAUD,MAAO,EADN;AAEnBE,IAAAA,YAAY,EAAE,wBAFK;AAGnBC,IAAAA,EAAE,EAAEH;AAHe,GAAD,EAIjB;AAACI,IAAAA,QAAQ,EAAE;AAAX,GAJiB,CAApB;AAKD;;AAED,eAAe,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEjDW,KAFiD,GAEzC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAEX,aAAa,CAAC;AACtBG,UAAAA,KAAK,EAAE,gBADe;AAEtBC,UAAAA,YAAY,EAAE;AAFQ,SAAD,EAGpB;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAHoB,CADX;AAKZM,QAAAA,OAAO,EAAEX,mBAAmB,CAAC,CAAD,CALhB;AAMZY,QAAAA,OAAO,EAAEZ,mBAAmB,CAAC,CAAD,CANhB;AAOZa,QAAAA,OAAO,EAAEb,mBAAmB,CAAC,CAAD,CAPhB;AAQZc,QAAAA,OAAO,EAAEd,mBAAmB,CAAC,CAAD;AARhB;AAFR,KAFyC;;AAAA,SAgBjDe,aAhBiD,GAgBjCC,KAAK,IAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACD,KAlBgD;;AAAA,SAoBjDC,kBApBiD,GAoB5B,MAAM,CAE1B,CAtBgD;;AAAA,SAwBjDC,iBAxBiD,GAwB7B,MAAM,CAEzB,CA1BgD;AAAA;;AA4BjDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEvB,OAAO,CAACS,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE;AAAM,MAAA,QAAQ,EAAE,KAAKS,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAWE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,KAAKG,kBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAkBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,KAAKC,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlBF,CAHF,CADF,CADF;AAiCD;;AA9DgD","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Buttom from '../../components/UI/Button/Button'\r\nimport {createControl} from '../../form/formFramework'\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Variant ${number}`,\r\n    errorMessage: 'Value can not be empty',\r\n    id: number,\r\n  }, {required: true})\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n\r\n  state = {\r\n    quiz: [],\r\n    formControls: {\r\n      question: createControl({\r\n        label: 'Enter question',\r\n        errorMessage: 'Question can not be empty'\r\n      }, {required: true}),\r\n      option1: createOptionControl(1),\r\n      option2: createOptionControl(2),\r\n      option3: createOptionControl(3),\r\n      option4: createOptionControl(4)\r\n    }\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = () => {\r\n\r\n  }\r\n\r\n  createQuizHandler = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Quiz creation</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            <input type=\"text\" />            \r\n            <hr />\r\n            <input type=\"text\" />\r\n            <input type=\"text\" />\r\n            <input type=\"text\" />\r\n            <input type=\"text\" />\r\n\r\n            <select></select>\r\n\r\n            <Buttom \r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n            >\r\n              Add question\r\n            </Buttom>\r\n\r\n            <Buttom \r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n            >\r\n              Create quiz\r\n            </Buttom>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}