{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes';\nexport function auth(email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAKHOLs5WgSMxc41nqOk7FKiNd090V4Qp0';\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAKHOLs5WgSMxc41nqOk7FKiNd090V4Qp0';\n    }\n\n    const response = await axios.post(url, authData);\n    const data = response.data;\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n    localStorage.setItem('token', data.idToken);\n    localStorage.setItem('userId', data.userId);\n    localStorage.setItem('expirationDate', data.expirationDate);\n    dispatch(authSuccess(data.idToken));\n    dispatch(autoLogout(data.expiresIn));\n  };\n}\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\nexport function logout() {\n  localStorage.removeItem('token', data.idToken);\n  localStorage.removeItem('userId', data.userId);\n  localStorage.setItem('expirationDate', data.expirationDate);\n  return {\n    type: AUTH_LOGOUT\n  };\n}\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  };\n}","map":{"version":3,"sources":["D:/git_hub/spumony/quiz-app/src/store/actions/auth.js"],"names":["axios","AUTH_SUCCESS","AUTH_LOGOUT","auth","email","password","isLogin","dispatch","authData","returnSecureToken","url","response","post","data","expirationDate","Date","getTime","expiresIn","localStorage","setItem","idToken","userId","authSuccess","autoLogout","time","setTimeout","logout","removeItem","type","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC7C,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,QAAQ,GAAG;AACfJ,MAAAA,KADe;AACRC,MAAAA,QADQ;AAEfI,MAAAA,iBAAiB,EAAE;AAFJ,KAAjB;AAKA,QAAIC,GAAG,GAAG,uGAAV;;AAEA,QAAIJ,OAAJ,EAAa;AACXI,MAAAA,GAAG,GAAG,mHAAN;AACD;;AAED,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAWF,GAAX,EAAgBF,QAAhB,CAAvB;AACA,UAAMK,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AAEA,UAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuBH,IAAI,CAACI,SAAL,GAAiB,IAAjD,CAAvB;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,OAAnC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BN,IAAI,CAACQ,MAApC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCN,IAAI,CAACC,cAA5C;AAEAP,IAAAA,QAAQ,CAACe,WAAW,CAACT,IAAI,CAACO,OAAN,CAAZ,CAAR;AACAb,IAAAA,QAAQ,CAACgB,UAAU,CAACV,IAAI,CAACI,SAAN,CAAX,CAAR;AACD,GAvBD;AAwBD;AAED,OAAO,SAASM,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAOjB,QAAQ,IAAI;AACjBkB,IAAAA,UAAU,CAAC,MAAM;AACflB,MAAAA,QAAQ,CAACmB,MAAM,EAAP,CAAR;AACD,KAFS,EAEPF,IAAI,GAAG,IAFA,CAAV;AAGD,GAJD;AAKD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvBR,EAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB,EAAiCd,IAAI,CAACO,OAAtC;AACAF,EAAAA,YAAY,CAACS,UAAb,CAAwB,QAAxB,EAAkCd,IAAI,CAACQ,MAAvC;AACAH,EAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCN,IAAI,CAACC,cAA5C;AACA,SAAO;AACLc,IAAAA,IAAI,EAAE1B;AADD,GAAP;AAGD;AAED,OAAO,SAASoB,WAAT,CAAqBO,KAArB,EAA4B;AACjC,SAAO;AACLD,IAAAA,IAAI,EAAE3B,YADD;AAEL4B,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import axios from 'axios'\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email, password, \r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAKHOLs5WgSMxc41nqOk7FKiNd090V4Qp0'\r\n\r\n    if (isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAKHOLs5WgSMxc41nqOk7FKiNd090V4Qp0'\r\n    }\r\n\r\n    const response = await axios.post(url, authData)\r\n    const data = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.userId)\r\n    localStorage.setItem('expirationDate', data.expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000);\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token', data.idToken)\r\n  localStorage.removeItem('userId', data.userId)\r\n  localStorage.setItem('expirationDate', data.expirationDate)\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}