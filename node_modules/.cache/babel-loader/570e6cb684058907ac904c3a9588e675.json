{"ast":null,"code":"import axios from '../../axios/axios-quiz';\nimport { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY } from './actionTypes';\nexport function fetchQuizes() {\n  return async dispatch => {\n    dispatch(fetchQuizesStart());\n\n    try {\n      const response = await axios.get('/quizes.json');\n      const quizes = [];\n      Object.keys(response.data).forEach((key, index) => {\n        quizes.push({\n          id: key,\n          name: `Тест №${index + 1}`\n        });\n      });\n      dispatch(fetchQuizesSuccess(quizes));\n    } catch (e) {\n      dispatch(fetchQuizesError(e));\n    }\n  };\n}\nexport function fetchQuizById(quizId) {\n  return async dispatch => {\n    dispatch(fetchQuizesStart());\n\n    try {\n      const response = await axios.get(`/quizes/${quizId}.json`);\n      const quiz = response.data;\n      dispatch(fetchQuizSuccess(quiz));\n    } catch (e) {\n      dispatch(fetchQuizesError(e));\n    }\n  };\n}\nexport function fetchQuizSuccess(quiz) {\n  return {\n    type: FETCH_QUIZ_SUCCESS,\n    quiz\n  };\n}\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START\n  };\n}\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    quizes\n  };\n}\nexport function fetchQuizesError(e) {\n  return {\n    type: FETCH_QUIZES_ERROR,\n    error: e\n  };\n}\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    answerState,\n    results\n  };\n}\nexport function finishQuiz() {\n  return {\n    type: FINISH_QUIZ\n  };\n}\nexport function quizNextQuestion(number) {\n  return {\n    type: QUIZ_NEXT_QUESTION,\n    number\n  };\n}\nexport function retryQuiz() {\n  return {\n    type: QUIZ_RETRY\n  };\n}\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n    const state = getState().quiz;\n\n    if (state.answerState) {\n      const key = Object.keys(state.answerState)[0];\n\n      if (state.answerState[key] === 'success') {\n        return;\n      }\n    }\n\n    const question = state.quiz[state.activeQuestion];\n    const results = state.results;\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success';\n      }\n\n      dispatch(quizSetState({\n        [answerId]: 'success'\n      }, results));\n      const timeout = window.setTimeout(() => {\n        if (isQuizFinished(state)) {\n          dispatch(finishQuiz());\n        } else {\n          dispatch(quizNextQuestion(state.activeQuestion + 1));\n        }\n\n        window.clearTimeout(timeout);\n      }, 1000);\n    } else {\n      results[question.id] = 'error';\n      dispatch(quizSetState({\n        [answerId]: 'error'\n      }, results));\n    }\n  };\n}\n\nfunction isQuizFinished(state) {\n  return state.activeQuestion + 1 === state.quiz.length;\n}","map":{"version":3,"sources":["D:/git_hub/spumony/quiz-app/src/store/actions/quiz.js"],"names":["axios","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","fetchQuizes","dispatch","fetchQuizesStart","response","get","quizes","Object","keys","data","forEach","key","index","push","id","name","fetchQuizesSuccess","e","fetchQuizesError","fetchQuizById","quizId","quiz","fetchQuizSuccess","type","error","quizSetState","answerState","results","finishQuiz","quizNextQuestion","number","retryQuiz","quizAnswerClick","answerId","getState","state","question","activeQuestion","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","length"],"mappings":"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","sourcesContent":["import axios from '../../axios/axios-quiz'\r\nimport { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY } from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get('/quizes.json')\r\n\r\n      const quizes = []\r\n\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        })\r\n      })\r\n\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`)\r\n      const quiz = response.data\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch(e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n      if (state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion]\r\n    const results = state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n        }\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      dispatch(quizSetState({[answerId]: 'error'}, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n"]},"metadata":{},"sourceType":"module"}