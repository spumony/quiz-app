{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: {},\n      // {[id]: success error}\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      // { [id]: 'success' 'error' }\n      quiz: [{\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        id: 1,\n        answers: [{\n          text: 'Черный',\n          id: 1\n        }, {\n          text: 'Синий',\n          id: 2\n        }, {\n          text: 'Красный',\n          id: 3\n        }, {\n          text: 'Зеленый',\n          id: 4\n        }]\n      }, {\n        question: 'В каком году основали Санкт-Петербург?',\n        rightAnswerId: 3,\n        id: 2,\n        answers: [{\n          text: '1700',\n          id: 1\n        }, {\n          text: '1702',\n          id: 2\n        }, {\n          text: '1703',\n          id: 3\n        }, {\n          text: '1803',\n          id: 4\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  async componentDidMount() {\n    console.log('Quiz ID = ', this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Quiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.state.isFinished ? /*#__PURE__*/React.createElement(FinishedQuiz, {\n      results: this.state.results,\n      quiz: this.state.quiz,\n      onRetry: this.retryHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(ActiveQuiz, {\n      answers: this.state.quiz[this.state.activeQuestion].answers,\n      question: this.state.quiz[this.state.activeQuestion].question,\n      onAnswerClick: this.onAnswerClickHandler,\n      quizLength: this.state.quiz.length,\n      answerNumber: this.state.activeQuestion + 1,\n      state: this.state.answerState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }\n    })));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","axios","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","question","rightAnswerId","id","answers","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","componentDidMount","console","log","props","match","params","render","QuizWrapper"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // {[id]: success error}\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' 'error' }\n    quiz: [\n      {\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        id: 1,\n        answers: [\n          {text: 'Черный', id: 1},\n          {text: 'Синий', id: 2},\n          {text: 'Красный', id: 3},\n          {text: 'Зеленый', id: 4}\n        ]\n      },\n      {\n        question: 'В каком году основали Санкт-Петербург?',\n        rightAnswerId: 3,\n        id: 2,\n        answers: [\n          {text: '1700', id: 1},\n          {text: '1702', id: 2},\n          {text: '1703', id: 3},\n          {text: '1803', id: 4}\n        ]\n      }\n    ]\n  }\n\n  onAnswerClickHandler = answerId => {\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      this.setState({\n        answerState: {[answerId]: 'success'},\n        results\n      })\n\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null\n          })\n        }\n        window.clearTimeout(timeout)\n      }, 1000)\n    } else {\n      results[question.id] = 'error'\n      this.setState({\n        answerState: {[answerId]: 'error'},\n        results\n      })\n    }\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  async componentDidMount() {\n    console.log('Quiz ID = ', this.props.match.params.id)\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.state.isFinished\n             ? <FinishedQuiz\n                  results={this.state.results}\n                  quiz={this.state.quiz}\n                  onRetry={this.retryHandler}\n                />\n             : <ActiveQuiz\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                question={this.state.quiz[this.state.activeQuestion].question}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}