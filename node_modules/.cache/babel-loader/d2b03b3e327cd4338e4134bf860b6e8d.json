{"ast":null,"code":"import { valid } from \"semver\";\nexport function createControl(config, validation) {\n  return { ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  };\n}\nexport function validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = vlaue.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {}\n\n  return isFormValid;\n}","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/form/formFramework.js"],"names":["valid","createControl","config","validation","touched","value","validate","isValid","required","vlaue","trim","validateForm","formControls","isFormValid","control"],"mappings":"AAAA,SAASA,KAAT,QAAsB,QAAtB;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,UAA/B,EAA2C;AAChD,SAAO,EACL,GAAGD,MADE;AAELC,IAAAA,UAFK;AAGLH,IAAAA,KAAK,EAAE,CAACG,UAHH;AAILC,IAAAA,OAAO,EAAE,KAJJ;AAKLC,IAAAA,KAAK,EAAE;AALF,GAAP;AAOD;AAED,OAAO,SAASC,QAAT,CAAkBD,KAAlB,EAAyBF,UAAU,GAAG,IAAtC,EAA4C;AACjD,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAII,OAAO,GAAG,IAAd;;AAEA,MAAIJ,UAAU,CAACK,QAAf,EAAyB;AACvBD,IAAAA,OAAO,GAAGE,KAAK,CAACC,IAAN,OAAiB,EAAjB,IAAuBH,OAAjC;AACD;;AAED,SAAOA,OAAP;AACD;AAED,OAAO,SAASI,YAAT,CAAsBC,YAAtB,EAAoC;AACzC,MAAIC,WAAW,GAAG,IAAlB;;AAEA,OAAK,IAAIC,OAAT,IAAoBF,YAApB,EAAkC,CAEjC;;AAED,SAAOC,WAAP;AACD","sourcesContent":["import { valid } from \"semver\"\r\n\r\nexport function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: '',\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true\r\n  }\r\n\r\n  let isValid = true\r\n\r\n  if (validation.required) {\r\n    isValid = vlaue.trim() !== '' && isValid\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true\r\n\r\n  for (let control in formControls) {\r\n    \r\n  }\r\n\r\n  return isFormValid\r\n}"]},"metadata":{},"sourceType":"module"}