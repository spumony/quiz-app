{"ast":null,"code":"var _jsxFileName = \"D:\\\\git_hub\\\\react-minin\\\\react-quiz\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport classes from './Auth.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport is from 'is_js';\nimport axios from 'axios';\nexport default class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFormValid: false,\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Enter valid email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Password',\n          errorMessage: 'Enter valid password',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = async () => {\n      const authData = {\n        email: this.state.formControls.email.value,\n        password: this.state.formControls.password.value,\n        returnSecureToken: true\n      };\n      await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAKHOLs5WgSMxc41nqOk7FKiNd090V4Qp0');\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      let isFormValid = true;\n      Object.keys(formControls).forEach(name => {\n        isFormValid = formControls[name].valid && isFormValid;\n      });\n      this.setState({\n        formControls,\n        isFormValid\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Authorization\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, this.renderInputs(), /*#__PURE__*/React.createElement(Button, {\n      type: \"success\",\n      onClick: this.loginHandler,\n      disabled: !this.state.isFormValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.registerHandler,\n      disabled: !this.state.isFormValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Sign up\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/git_hub/react-minin/react-quiz/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","is","axios","Auth","state","isFormValid","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","registerHandler","authData","returnSecureToken","post","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","Object","keys","forEach","name","setState","isValid","trim","length","renderInputs","map","index","render","AuthForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport axios from 'axios'\r\n\r\nexport default class Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Enter valid email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        errorMessage: 'Enter valid password',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n\r\n  }\r\n\r\n  registerHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true\r\n    }\r\n    await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAKHOLs5WgSMxc41nqOk7FKiNd090V4Qp0')\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.value = event.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    let isFormValid = true\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Authorization</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            { this.renderInputs() }\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Sign in\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}